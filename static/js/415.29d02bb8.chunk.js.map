{"version":3,"file":"static/js/415.29d02bb8.chunk.js","mappings":"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","sources":["pages/Home.jsx","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import { Container, Link, Typography } from '@mui/material';\nimport { useAuth } from 'hooks/useAuth';\nimport { NavLink } from 'react-router-dom';\n\nexport default function Home() {\n  const { isLoggedIn } = useAuth();\n\n  return isLoggedIn ? (\n    <Container sx={{ my: 4 }}>\n      <Typography variant=\"h3\" component=\"h1\" sx={{ textAlign: 'center' }}>\n        Welcome to your personal phonebook.\n        <br />\n        <Link to=\"/contacts\" component={NavLink}>\n          Add your contacts\n        </Link>\n      </Typography>\n    </Container>\n  ) : (\n    <Container>\n      <Typography variant=\"h3\" component=\"h1\" sx={{ textAlign: 'center' }}>\n        Welcome to your personal phonebook. Please\n        <br />\n        <Link to=\"/register\" component={NavLink}>\n          register\n        </Link>{' '}\n        or{' '}\n        <Link to=\"/login\" component={NavLink}>\n          login\n        </Link>\n      </Typography>\n    </Container>\n  );\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"],"names":["Home","useAuth","isLoggedIn","sx","my","variant","component","textAlign","to","NavLink","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","theme","ownerState","transformedColor","color","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","Typography","name","overridesResolver","props","styles","root","capitalize","underline","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","Object","keys","includes","Array","isArray","getTypographyUtilityClass","TypographyRoot","align","noWrap","gutterBottom","paragraph","typography","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","themeProps","extendSxProp","variantMapping","Component","as"],"sourceRoot":""}